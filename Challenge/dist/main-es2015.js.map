{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/service/WebRequestService.ts","./src/app/task-form/task.component.ts","./src/app/task-form/task.component.html","./src/app/task-list/task-list.component.ts","./src/app/task-list/task-list.component.html","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule }      from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { HeaderComponent } from \"./header/header.component\";\r\nimport { TaskControllerComponent } from \"./task-form/task.component\"\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TaskListComponent } from './task-list/task-list.component';\r\n\r\n/**\r\n * Main module for our application. If creating any new components, be sure to declare them here.\r\n * If creating any new services, provide them here.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule, \r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule, // required animations module\r\n    ToastrModule.forRoot(), // ToastrModule added\r\n  ],\r\n  declarations: [ \r\n    HomeComponent,\r\n    HeaderComponent,\r\n    TaskControllerComponent,\r\n    TaskListComponent\r\n  ],\r\n  bootstrap: [\r\n    HomeComponent \r\n  ]\r\n})\r\nexport default class AppModule { \r\n}","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"thx-header\",\r\n    templateUrl: \"./header.component.html\",\r\n    styleUrls: [\"./header.component.css\"]\r\n})\r\nexport class HeaderComponent { }","<header>\r\n    <img src=\"../../assets/thinixlogo.png\" alt=\"\" />\r\n    <span>TODO List</span>\r\n</header>","import { Component } from \"@angular/core\";\r\n\r\n\r\n@Component({\r\n  selector: \"thx-home\",\r\n  templateUrl: \"./home.component.html\",\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent  {\r\n}\r\n","<thx-header></thx-header>\r\n<div class=\"container\">\r\n  <task-form></task-form>\r\n</div>\r\n<div class=\"container\">\r\n  <task-list></task-list>\r\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Task } from '/Users/emin/Desktop/AngularTaskManager/Challenge/src/app/models/task';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebRequestService {\n\n  readonly ROOT_URL = 'http://localhost:3000';\n  formData : Task;\n  list : Task[];\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  get(uri: string) {\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n\n  postTask(formData : Task) {\n    return this.http.post(`${this.ROOT_URL}/tasks`, formData, {observe: 'response'});\n  }\n  \n\n  refreshList(){\n    this.http.get(this.ROOT_URL+'/tasks')\n    .toPromise().then(res => this.list = res as Task[]);\n  }\n\n  patch(uri: string, payload: Object) {\n    return this.http.patch(`${this.ROOT_URL}/${uri}`, payload);\n  }\n  putEmployee(formData : Task){\n    return this.http.put(this.ROOT_URL+'/tasks/'+formData.id,formData);\n     \n   }\n\n  deleteTask(id: number) {\n    return this.http.delete(`${this.ROOT_URL}/tasks/`+id);\n  }\n\n}\n","import { Observable } from \"rxjs/Observable\";\nimport { Task } from '/Users/emin/Desktop/AngularTaskManager/Challenge/src/app/models/task';\nimport { HttpClient } from '@angular/common/http';\n\nimport { WebRequestService} from '/Users/emin/Desktop/AngularTaskManager/Challenge/src/app/service/WebRequestService'\nimport { Component, OnInit } from \"@angular/core\";\n\nimport { NgForm } from '@angular/forms';\n\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: \"task-form\",\n  templateUrl: \"./task.component.html\",\n  styleUrls: ['./task.component.css']\n})\nexport class TaskControllerComponent implements OnInit {\n  current:Task = null;\n  tasks: Array<Task>;\n  requests: WebRequestService;\n  private http: HttpClient\n\n  constructor(private toastr: ToastrService, public service: WebRequestService) {\n\n  }\n  ngOnInit(): void {\n    this.resetForm();\n  }\n  \n  createTask(id: number, title: string, done: boolean, description?: string, due?: string){\n    this.current.id = id;\n    this.current.title = title;\n    this.current.description = description;\n    this.current.due = due;\n    this.current.done = done;\n  }\n\n  addTask(node: Task): void {\n    this.tasks.push(node);\n\n  }\n  public deleteTask(index) {\n    this.tasks.splice(index, 1);     \n  } \n  \n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.resetForm();\n    this.service.formData = {\n      id: null,\n      title: '',\n      description: '',\n      due: '',\n      done: false\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value.EmployeeID == null)\n      this.insertRecord(form);\n    else\n      this.updateRecord(form);\n  }\n  insertRecord(form: NgForm) {\n    this.service.postTask(form.value).subscribe(res => {\n      this.toastr.success('Inserted successfully', 'EMP. Register');\n      this.resetForm(form);\n      this.service.refreshList();\n    });\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.putEmployee(form.value).subscribe(res => {\n      this.toastr.info('Updated successfully', 'EMP. Register');\n      this.resetForm(form);\n      this.service.refreshList();\n    });\n\n  }\n\n}","<div class=\"jumbotron\">\n  <form #form=\"ngForm\" (submit)=\"onSubmit(form)\" autocomplete=\"off\">\n    <input type=\"hidden\" name=\"id\" #id=\"ngModel\" [(ngModel)]=\"service.formData.id\">\n    <div class=\"form-group\">\n      <label>Title</label>\n      <input name=\"Title\" #FullName=\"ngModel\" [(ngModel)]=\"service.formData.title\" required minlength=\"2\" class=\"form-control\" required>\n      <div class=\"validation-error\" *ngIf=\"service.formData.title.length == 0 \">This field is required.</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Description</label>\n      <input name=\"Description\" #Position=\"ngModel\" [(ngModel)]=\"service.formData.description\" class=\"form-control\">\n    </div>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label>Due Date</label>\n        <input name=\"Due\" #EMPCode=\"ngModel\" [(ngModel)]=\"service.formData.due\" class=\"form-control\">\n      </div>\n      <div class=\"form-group  col-md-6\">\n        <label>Done</label>\n        <input name=\"Done\" #Mobile=\"ngModel\" [(ngModel)]=\"service.formData.done\" class=\"form-control\">\n      </div>\n      \n    </div>\n    <div class=\"form-group\">\n      <button type=\"submit\" [disabled]=\"form.invalid\" class=\"btn btn-lg btn-block\">SUBMIT</button>\n    </div>\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { WebRequestService } from '/Users/emin/Desktop/AngularTaskManager/Challenge/src/app/service/WebRequestService';\nimport { Task } from '/Users/emin/Desktop/AngularTaskManager/Challenge/src/app/models/task';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnInit {\n\n  constructor(public service: WebRequestService,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.service.refreshList();\n  }\n\n  populateForm(tasks: Task) {\n    this.service.formData = Object.assign({}, tasks);\n  }\n\n  onDelete(id: number) {\n    if (confirm('Are you sure to delete this record?')) {\n      this.service.deleteTask(id).subscribe(res => {\n        this.service.refreshList();\n        this.toastr.warning('Deleted successfully', ' :)');\n      });\n    }\n  }\n\n}","<div class=\"jumbotron\">\n    <table class=\"table table-hover\">\n        <tr *ngFor=\"let tasks of service.list\">\n          <div class=\"Expanding\">\n              <td (click)=\"populateForm(tasks)\">[{{tasks.id}}]-{{tasks.title}}</td>\n              <td><button (click)=\"onDelete(tasks.id)\" class=\"btn btn-sm btn-outline-danger\">X</button></td>\n          </div>\n        </tr>\n      </table>\n</div>","import AppModule from \"./app/app.module\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\nimport \"zone.js/dist/zone\";\r\n\r\n\r\n/**\r\n * This is the main entry point for the applications. It's only job is to 'Bootstrap' our home module\r\n */\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\r\n"],"sourceRoot":"webpack:///"}